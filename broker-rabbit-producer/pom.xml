<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>broker-system</artifactId>
        <groupId>com.xabe</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>broker-rabbit-producer</artifactId>
    <properties>
        <app.name>producer-rabbitmq</app.name>
        <app.parent.dir>${project.build.directory}</app.parent.dir>
        <app.config.dir>${project.build.directory}/config</app.config.dir>
        <app.bin.dir>${project.build.directory}/bin</app.bin.dir>
        <app.main.class>com.xabe.broker.rabbitmq.App</app.main.class>
        <app.logs.dir>${project.build.directory}/logs</app.logs.dir>
        <app.deploy.dir>${project.build.directory}/deploy</app.deploy.dir>
        <docker.image.prefix>xabe</docker.image.prefix>
        <hostname.rabbitmq>localhost</hostname.rabbitmq>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.amqp</groupId>
            <artifactId>spring-rabbit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.amqp</groupId>
            <artifactId>spring-amqp</artifactId>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <resources>
            <resource>
                <filtering>true</filtering>
                <directory>${project.basedir}/src/main/resources</directory>
                <targetPath>${app.config.dir}</targetPath>
                <includes>
                    <include>application.properties</include>
                </includes>
            </resource>
            <resource>
                <filtering>false</filtering>
                <directory>${project.basedir}/src/main/resources</directory>
                <targetPath>${app.config.dir}</targetPath>
                <excludes>
                    <exclude>application.properties</exclude>
                </excludes>
            </resource>
            <resource>
                <filtering>true</filtering>
                <directory>${project.build.scriptSourceDirectory}</directory>
                <targetPath>${app.bin.dir}</targetPath>
                <includes>
                    <include>*.sh</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <configuration>
                    <target>
                        <mkdir dir="${app.logs.dir}"/>
                        <mkdir dir="${app.deploy.dir}"/>
                        <chmod file="target/bin/startup.sh" perm="755"/>
                        <copy todir="${app.deploy.dir}">
                            <fileset dir="${project.build.directory}">
                                <include name="*.jar"/>
                            </fileset>
                        </copy>
                    </target>
                </configuration>
                <executions>
                    <execution>
                        <phase>install</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.10</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                            <excludeScope>test</excludeScope>
                            <includeScope>compile</includeScope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <descriptors>
                        <descriptor>${project.basedir}/src/main/assembly/default.xml</descriptor>
                    </descriptors>
                    <finalName>${app.name}</finalName>
                    <appendAssemblyId>false</appendAssemblyId>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>docker</id>
            <properties>
                <app.parent.dir>/home/app/producer-rabbitmq</app.parent.dir>
                <hostname.rabbitmq>rabbitmq</hostname.rabbitmq>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${docker.plugin.version}</version>
                        <configuration>
                            <imageName>${docker.image.prefix}/${project.artifactId}</imageName>
                            <dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
                            <imageTags>
                                <imageTag>${project.version}</imageTag>
                                <imageTag>latest</imageTag>
                            </imageTags>
                            <resources>
                                <resource>
                                    <targetPath>/</targetPath>
                                    <directory>${project.build.directory}</directory>
                                    <include>${app.name}.tar.gz</include>
                                </resource>
                            </resources>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>install</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>


</project>